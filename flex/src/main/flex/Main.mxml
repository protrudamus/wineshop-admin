<?xml version="1.0" encoding="utf-8"?>

<!--
  GRANITE DATA SERVICES
  Copyright (C) 2011 GRANITE DATA SERVICES S.A.S.

  This file is part of Granite Data Services.

  Granite Data Services is free software; you can redistribute it and/or modify
  it under the terms of the GNU Lesser General Public License as published by
  the Free Software Foundation; either version 3 of the License, or (at your
  option) any later version.

  Granite Data Services is distributed in the hope that it will be useful, but
  WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
  FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License
  for more details.

  You should have received a copy of the GNU Lesser General Public License
  along with this library; if not, see <http://www.gnu.org/licenses/>.
-->

<s:Application
	xmlns:fx="http://ns.adobe.com/mxml/2009"
	xmlns:s="library://ns.adobe.com/flex/spark"
	xmlns:mx="library://ns.adobe.com/flex/mx"
    xmlns="*"
    controlBarVisible="{identity.loggedIn}"
    preinitialize="Spring.getInstance().initApplication()"
    creationComplete="init()">
   	
    <fx:Script>
        <![CDATA[
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			
			import org.granite.tide.data.DataObserver;
			import org.granite.tide.data.OptimisticLockExceptionHandler;
			import org.granite.tide.data.events.TideDataConflictsEvent;
			import org.granite.tide.service.DefaultServiceInitializer;
			import org.granite.tide.spring.Identity;
			import org.granite.tide.spring.Spring;
			import org.granite.tide.validators.ValidatorExceptionHandler;
            
            [Bindable] [Inject]
            public var identity:Identity;
            
            private function init():void {
                // Define service endpoint resolver
                Spring.getInstance().getSpringContext().serviceInitializer = new DefaultServiceInitializer('/wineshop-admin');
                
                // Configuration for data push observer subscribed upon login/logout
                // Remove if not using DataObserver
                Spring.getInstance().addComponent("wineshopTopic", DataObserver);
                Spring.getInstance().addEventObserver("org.granite.tide.login", "wineshopTopic", "subscribe");
                Spring.getInstance().addEventObserver("org.granite.tide.logout", "wineshopTopic", "unsubscribe");
                
				// Register exception handler for validation
				Spring.getInstance().addExceptionHandler(ValidatorExceptionHandler);
				
				// Register exception handler for optimistic locking
				Spring.getInstance().addExceptionHandler(OptimisticLockExceptionHandler);

				Spring.getInstance().getSpringContext().addEventListener(TideDataConflictsEvent.DATA_CONFLICTS, conflictsHandler);

                // Check current authentication state
                identity.isLoggedIn();
            }
            
            [Observer("org.granite.tide.login")]
            public function login():void {
                removeElementAt(0);
                addElement(new Home());
            }
            
            [Observer("org.granite.tide.logout")]
            public function logout():void {
                removeElementAt(0);
                addElement(new Login());
            }
			
			
			private function conflictsHandler(event:TideDataConflictsEvent):void {
				Alert.show("Someone has modified this vineyard at the same time as you.\nDo you want to keep your changes?", 
					"Conflict", Alert.YES | Alert.NO, null, function(ce:CloseEvent):void {
						if (ce.detail == Alert.YES)
							event.conflicts.acceptAllClient();
						else
							event.conflicts.acceptAllServer();
					}
				);
			}
        ]]>
    </fx:Script>

    <s:controlBarContent>
        <s:Label text="GraniteDS Application wineshop-admin" fontSize="18" fontWeight="bold" width="100%"/>
        <s:Button label="Logout" click="identity.logout();"/>
    </s:controlBarContent>
 
    <Login id="loginView"/>

</s:Application>
